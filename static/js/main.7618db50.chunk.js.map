{"version":3,"sources":["components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/Device.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","store/auth-context.js","components/Auth/AuthForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/Device.module.css","components/Profile/ProfileForm.module.css","components/Profile/UserProfile.module.css","components/Auth/AuthForm.js","components/StartingPage/StartingPageContent.module.css"],"names":["MainNavigation","authCtx","useContext","AuthContext","isLoggedIn","className","classes","header","to","logo","Img","src","alt","onClick","logOut","Layout","props","children","Device","online","isOnline","React","useState","state","status","setStatus","handleClick","event","Url","getData","token","value","target","name","axios","method","url","headers","Authorization","then","response","message","Swal","fire","position","icon","title","showConfirmButton","timer","dev","divSpan","style","color","backgroundColor","id","devBtn","ProfileForm","devices","setDevices","setState","data","control","map","device","powerState","UserProfile","profile","AuthPage","AuthForm","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","createRoot","document","getElementById","render","logoutTimer","createContext","login","calculateRemainingTime","expirationTime","currentTime","Date","getTime","AuthContextProvider","initialToken","tokenData","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","duration","retrieveStoredToken","setToken","userIsLoggedIn","logoutHandler","useCallback","clearTimeout","useEffect","console","log","setTimeout","contextValue","setItem","Provider","module","exports","history","useHistory","emailInputRef","useRef","passwordInputRef","isLogin","setIsLogin","eye","setEye","auth","onSubmit","preventDefault","enteredEmail","current","enteredPassword","Buffer","from","toString","form","client_id","Data","expiresIn","accessToken","replace","catch","error","text","htmlFor","divIcon","sx","fontSize","type","required","ref","autoComplete","actions","toggle","prevState"],"mappings":"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","file":"static/js/main.7618db50.chunk.js","sourcesContent":["import { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthContext from \"../../store/auth-context\";\n\nimport classes from \"./MainNavigation.module.css\";\n\nconst MainNavigation = () => {\n  const authCtx = useContext(AuthContext);\n  const isLoggedIn = authCtx.isLoggedIn;\n\n  const logoutHandler = () => {\n    authCtx.logOut();\n  };\n\n  return (\n    <header className={classes.header}>\n      <Link to=\"/\">\n        <div className={classes.logo}>\n          <img className={classes.Img} src=\"/image/logo3.png\" alt=\"logo\"></img>\n          Room Automation\n        </div>\n      </Link>\n      <nav>\n        <ul>\n          <li>\n            <button>\n              <Link to=\"/\">Home</Link>\n            </button>\n          </li>\n\n          {!isLoggedIn && (\n            <li>\n              <button>\n                <Link to=\"/auth\">Login</Link>\n              </button>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <button>\n                <Link to=\"/profile\">DashBoard</Link>\n              </button>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <button onClick={logoutHandler}>Logout</button>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import React, { useContext } from \"react\";\nimport classes from \"./Device.module.css\";\nimport AuthContext from \"../../store/auth-context\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\n\nfunction Device(props) {\n  var online = props.isOnline;\n\n  const [status, setStatus] = React.useState(props.state);\n  const authCtx = useContext(AuthContext);\n\n  function handleClick(event) {\n    props.getData();\n    let Url;\n    const token = authCtx.token;\n    const value = event.target.value;\n    const name = event.target.name;\n    if (online) {\n      if (value === \"On\") {\n        Url =\n          \"https://api.sinric.pro/api/v1/devices/\" +\n          name +\n          '/action?clientId=android-app&type=request&createdAt=1550493108338&action=setPowerState&value={\"state\": \"On\"}';\n        setStatus(\"On\");\n      } else if (value === \"Off\") {\n        Url =\n          \"https://api.sinric.pro/api/v1/devices/\" +\n          name +\n          '/action?clientId=android-app&type=request&createdAt=1550493108338&action=setPowerState&value={\"state\": \"Off\"}';\n        setStatus(\"Off\");\n      }\n\n      axios({\n        method: \"GET\",\n        url: Url,\n        headers: {\n          Authorization: \"Bearer \" + [token],\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n      }).then(function (response) {\n        if (response.status === 200) {\n          const message = \"Turned \" + value + \" device.\";\n\n          Swal.fire({\n            position: \"center\",\n            icon: \"success\",\n            title: [message],\n            showConfirmButton: false,\n            timer: 1500,\n          });\n        }\n      });\n    } else {\n      //alert(\"Devices are offline\");\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Devices are offline\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n  }\n\n  return (\n    <div className={classes.dev}>\n      <img src=\"/image/device.jpg\" alt=\"device\"></img>\n      <h1>{props.title}</h1>\n      <div className={classes.divSpan}>\n        {status === \"On\" ? (\n          <span style={{ color: \"white\", backgroundColor: \"green\" }}>\n            Switch is On\n          </span>\n        ) : (\n          <span style={{ color: \"white\", backgroundColor: \"red\" }}>\n            Switch is Off\n          </span>\n        )}\n\n        {online ? (\n          <span style={{ color: \"white\", backgroundColor: \"green\" }}>\n            Device is Online\n          </span>\n        ) : (\n          <span style={{ color: \"white\", backgroundColor: \"red\" }}>\n            Device is Offline\n          </span>\n        )}\n      </div>\n\n      <p>Device Id : {props.id}</p>\n      <div className={classes.devBtn}>\n        <button value=\"On\" name={props.id} onClick={handleClick}>\n          Turn On\n        </button>\n        <button value=\"Off\" name={props.id} onClick={handleClick}>\n          Turn Off\n        </button>\n      </div>\n    </div>\n  );\n}\nexport default Device;\n","import React, { useState, useContext } from \"react\";\n\nimport Device from \"./Device\";\n\nimport classes from \"./ProfileForm.module.css\";\nimport AuthContext from \"../../store/auth-context\";\nimport axios from \"axios\";\n\nconst ProfileForm = (props) => {\n  const authCtx = useContext(AuthContext);\n  const [devices, setDevices] = useState([]);\n  const [state, setState] = useState(true);\n\n  function getData() {\n    setState(true);\n  }\n\n  const token = authCtx.token;\n  if (state) {\n    axios({\n      method: \"GET\",\n      url: \"https://api.sinric.pro/api/v1/devices/\",\n      headers: {\n        Authorization: \"Bearer \" + [token],\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n    }).then(function (response) {\n      setDevices(response.data.devices);\n      setState(false);\n    });\n  }\n\n  return (\n    <div className={classes.control}>\n      {devices.map((device) => {\n        return (\n          <Device\n            key={device.id}\n            id={device.id}\n            getData={getData}\n            title={device.name}\n            state={device.powerState}\n            isOnline={device.isOnline}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ProfileForm;\n","import ProfileForm from \"./ProfileForm\";\nimport classes from \"./UserProfile.module.css\";\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h2>DashBoard</h2>\n\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from \"./StartingPageContent.module.css\";\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome To Room Automation Project</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","//eslint-disable-next-line\nimport { useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Switch, Route, Router } from \"react-router-dom\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport UserProfile from \"./components/Profile/UserProfile\";\nimport AuthPage from \"./pages/AuthPage\";\nimport HomePage from \"./pages/HomePage\";\nimport AuthContext from \"./store/auth-context\";\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        {!authCtx.isLoggedIn && (\n          <Route path=\"/auth\">\n            <AuthPage />\n          </Route>\n        )}\n\n        <Route path=\"/profile\">\n          {authCtx.isLoggedIn && <UserProfile />}\n          {!authCtx.isLoggedIn && <Redirect to=\"/auth\" />}\n        </Route>\n\n        <Route path=\"*\">\n          <Router to=\"/\"></Router>\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","// eslint-disable-next-line\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { AuthContextProvider } from \"./store/auth-context\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>\n);\n","import React, { useState, useEffect, useCallback } from \"react\";\n\nlet logoutTimer;\n\nconst AuthContext = React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: (token) => {},\n  logOut: () => {},\n});\n\nconst calculateRemainingTime = (expirationTime) => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n\n  const remainingDuration = adjExpirationTime - currentTime;\n\n  return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem(\"token\");\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\n\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 3600) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    duration: remainingTime,\n  };\n};\n\nexport const AuthContextProvider = (props) => {\n  const tokenData = retrieveStoredToken();\n\n  let initialToken;\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n\n  const [token, setToken] = useState(initialToken);\n\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"expirationTime\", expirationTime);\n\n    const remainingTime = calculateRemainingTime(expirationTime);\n\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logOut: logoutHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__jsnxL\",\"control\":\"AuthForm_control__y6U-B\",\"actions\":\"AuthForm_actions__3kKu0\",\"toggle\":\"AuthForm_toggle__3KR7G\",\"divIcon\":\"AuthForm_divIcon__1zWg1\",\"icon\":\"AuthForm_icon__3XmPp\",\"eye\":\"AuthForm_eye__3CqMN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__1C4qP\",\"logo\":\"MainNavigation_logo__1u5KH\",\"Img\":\"MainNavigation_Img__3sMbt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dev\":\"Device_dev__tR9eF\",\"devBtn\":\"Device_devBtn__1J53g\",\"divSpan\":\"Device_divSpan__3PQ23\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"ProfileForm_control__18YJ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__1OJK-\"};","import { useState, useRef, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"../../store/auth-context\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\n\nimport MailLockIcon from \"@mui/icons-material/MailLock\";\nimport KeyIcon from \"@mui/icons-material/Key\";\n\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [eye, setEye] = useState(true);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  function handleEyeClick() {\n    setEye(false);\n  }\n  function handleEyeOffClick() {\n    setEye(true);\n  }\n  function submitHandler(event) {\n    event.preventDefault();\n\n    let Url;\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    if (isLogin) {\n      Url = \"https://api.sinric.pro/api/v1/auth\";\n      const auth =\n        \"Basic \" +\n        new Buffer.from(enteredEmail + \":\" + enteredPassword).toString(\n          \"base64\"\n        );\n      axios({\n        method: \"POST\",\n        url: Url,\n        headers: {\n          Authorization: auth,\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        form: {\n          client_id: \"android-app\",\n        },\n      })\n        .then(function (response) {\n          const Data = response.data;\n\n          const expirationTime = new Date(\n            new Date().getTime() + +Data.expiresIn * 10\n          );\n          authCtx.login(Data.accessToken, expirationTime);\n          history.replace(\"/\");\n        })\n        .catch(function (error) {\n          // handle error\n          Swal.fire({\n            icon: \"error\",\n            title: \"Oops...\",\n            text: \"Wrong Email or Password.\",\n          });\n        });\n    } else {\n      Url = \"https://api.sinric.pro/api/v1/auth\";\n      axios({\n        method: \"POST\",\n        url: Url,\n        headers: {\n          \"x-sinric-api-key\": enteredPassword,\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        form: {\n          client_id: \"android-app\",\n        },\n      })\n        .then(function (response) {\n          const Data = response.data;\n          console.log(Data);\n          const expirationTime = new Date(\n            new Date().getTime() + +Data.expiresIn * 10\n          );\n          authCtx.login(Data.accessToken, expirationTime);\n          history.replace(\"/\");\n        })\n        .catch(function (error) {\n          // handle error\n          Swal.fire({\n            icon: \"error\",\n            title: \"Oops...\",\n            text: \"Wrong Email or Api key.\",\n          });\n        });\n    }\n  }\n\n  return (\n    <section className={classes.auth}>\n      <h1>Login</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <div className={classes.divIcon}>\n            <MailLockIcon className={classes.icon} sx={{ fontSize: 40 }} />\n            <input\n              type=\"email\"\n              id=\"email\"\n              required\n              ref={emailInputRef}\n              autoComplete=\"off\"\n            />\n          </div>\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\"> {isLogin ? \"Password\" : \"API Key\"}</label>\n          <div className={classes.divIcon}>\n            <KeyIcon className={classes.icon} sx={{ fontSize: 40 }} />\n            <input\n              type={eye ? \"password\" : \"text\"}\n              id=\"password\"\n              required\n              ref={passwordInputRef}\n            />\n          </div>\n          {eye ? (\n            <RemoveRedEyeIcon\n              onClick={handleEyeClick}\n              className={classes.eye}\n              sx={{ fontSize: 30 }}\n            />\n          ) : (\n            <VisibilityOffIcon\n              onClick={handleEyeOffClick}\n              className={classes.eye}\n              sx={{ fontSize: 30 }}\n            />\n          )}\n        </div>\n        <div className={classes.actions}>\n          <button>Login</button>\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Login With API key\" : \"Login with Credential\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__1CxGL\"};"],"sourceRoot":""}